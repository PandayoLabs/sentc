name: Rust

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  core-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-core-${{ hashFiles('**/Cargo.lock') }}

      - name: Core tests
        run: cargo test --package sentc-crypto-core test

  std-keys-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-core-${{ hashFiles('**/Cargo.lock') }}

      - name: Std keys tests
        run: cargo test --package sentc-crypto-std-keys --lib test --features=full

  fips-keys-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-core-${{ hashFiles('**/Cargo.lock') }}

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential pkg-config libssl-dev

      - name: Install FIPS-compliant OpenSSL
        run: |
          # Clone the OpenSSL repository with FIPS support
          git clone https://github.com/openssl/openssl.git
          cd openssl
          
          # Checkout the specific version/tag/branch with FIPS support
          git checkout OpenSSL_1_1_1-stable
          
          # Configure and build OpenSSL with FIPS support
          ./config enable-fips
          make
          sudo make install
          
          # Set up FIPS module configuration
          echo "openssl_conf = openssl_init" > /usr/local/ssl/openssl.cnf
          echo "[openssl_init]" >> /usr/local/ssl/openssl.cnf
          echo "ssl_conf = ssl_sect" >> /usr/local/ssl/openssl.cnf
          echo "[ssl_sect]" >> /usr/local/ssl/openssl.cnf
          echo "system_default = crypto_policy" >> /usr/local/ssl/openssl.cnf
          echo "[crypto_policy]" >> /usr/local/ssl/openssl.cnf
          echo "include = /usr/local/ssl/fipsmodule.cnf" >> /usr/local/ssl/openssl.cnf
          
          # Enable FIPS mode
          export OPENSSL_FIPS=1
          export OPENSSL_CONF=/usr/local/ssl/openssl.cnf

      - name: Fips keys tests
        env:
          OPENSSL_FIPS: 1
          OPENSSL_CONF: /usr/local/ssl/openssl.cnf
        run: cargo test --package sentc-crypto-fips-keys test --features=full,sdk

  crypto-default:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-crypto_default-${{ hashFiles('**/Cargo.lock') }}

      - name: Crypto default tests
        run: cargo test --package sentc-crypto --lib test --features=server,export

  crypto-rust:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-crypto_rust-${{ hashFiles('**/Cargo.lock') }}

      - name: Crypto rust tests
        run: cargo test --package sentc-crypto --lib test --features=server

  crypto-light-default:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-crypto_rust-${{ hashFiles('**/Cargo.lock') }}

      - name: Crypto light default tests
        run: cargo test --package sentc-crypto-light --lib test --features=export

  crypto-light-rust:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-crypto_rust-${{ hashFiles('**/Cargo.lock') }}

      - name: Crypto light rust tests
        run: cargo test --package sentc-crypto-light --lib test